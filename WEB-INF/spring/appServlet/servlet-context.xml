<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:p="http://www.springframework.org/schema/p"	
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<cache:annotation-driven key-generator="ehCacheCustomKeyGenerator"/>
	<beans:bean id="ehCacheCustomKeyGenerator" class="com.ghn.repufact.common.EhCacheCustomKeyGenerator"/>
	
	<aop:aspectj-autoproxy/>
 
	<context:annotation-config />
	
	<context:component-scan base-package="com.ghn.repufact" />
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven content-negotiation-manager="contentNegotiationManager">
		<message-converters>
            <beans:bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
            <beans:bean class="org.springframework.http.converter.StringHttpMessageConverter" />
            <beans:bean class="org.springframework.http.converter.ResourceHttpMessageConverter" />
            <beans:bean class="org.springframework.http.converter.FormHttpMessageConverter" />
            <beans:ref bean="mappingJacksonHttpMessageConverter"/>
		</message-converters>
	</annotation-driven>
	<beans:bean id="clientDashBoaradAspectJLogger" class="com.ghn.repufact.common.LoggingInterceptor"/>
	<beans:bean id="contentNegotiationManager"
		class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<beans:property name="favorPathExtension" value="false" />
		<beans:property name="favorParameter" value="true" />
		<beans:property name="parameterName" value="mediaType" />
		<beans:property name="ignoreAcceptHeader" value="true" />
		<beans:property name="useJaf" value="false" />
		<beans:property name="defaultContentType" value="application/json" />
		<beans:property name="mediaTypes">
			<beans:map>
				<beans:entry key="json" value="application/json" />
				<beans:entry key="xml" value="application/xml" />
			</beans:map>
		</beans:property>
	</beans:bean>
	
	<beans:bean id="customObjectMapper" class="com.ghn.repufact.common.CustomObjectMapper" />
 
	<beans:bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	    <beans:property name="objectMapper" ref="customObjectMapper"/>
	</beans:bean>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>

	<!-- *******************************
	 ***** CACHE CONFIGURATION *****
	 ******************************* -->
	<beans:bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
	    <beans:property name="cacheManager" ref="ehcache"></beans:property>
	</beans:bean>
	<beans:bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"
	   p:configLocation="classpath:ehcache.xml" 
	   p:shared="true">
	</beans:bean>
	
</beans:beans>
